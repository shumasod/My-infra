##スクリプトの実装
url_encode() {
  nkf -W8MQ |
    sed 's/=$//' |
    tr '=' '%' |
    paste -s -d '\0' - |
    sed -e 's/%7E/~/g' \
        -e 's/%5F/_/g' \
        -e 's/%2D/-/g' \
        -e 's/%2E/./g'
}

## 最初のデータの受け取りだけ引数を使った例
!/bin/sh
url_encode() { # 引数で文字列が渡されると仮定
  local input="$*"
  echo "$input" |
    nkf -W8MQ |
    sed 's/=$//' |
    tr '=' '%' |
    paste -s -d '\0' - |
    sed -e 's/%7E/~/g' \
        -e 's/%5F/_/g' \
        -e 's/%2D/-/g' \
        -e 's/%2E/./g'
}
##デバック

#!/bin/bash
 
set -x
 
TODAY=`date +%Y%m%d`
 
echo $TODAY
 
touch test.txt
 
rm -f test.txt
 
cat test.txt


##引数
#!/bin/bash
 
set -x
 
TODAY=`date +%Y%m%d`
 
echo $TODAY
 
touch $1
 
rm -f $1
 
cat $1 

#slack通知

watch_slack_channel() {
  slackcat --channel team:general --stream --plain |
    while read -r post
    do
      # postには1つ1つの発言が格納されている。
    done
}
watch_slack_channel &

##scriptコマンドでログを自動取得する
script /<保存先>/<ログファイル名>.log

##操作ログ取得

if [ "$SHLVL" = "2" ] && [ ! -z "$PS1" ] ; then
    [ -d /var/log/history ] || mkdir /var/log/history
    script -af /var/log/history/`whoami`.log
fi

# if句
if [ $USER = 'sig' ]
then
echo 'Hi.'

# 上の『ifの条件句』に当てはまらなかった場合、elif句に処理が移る（記法はifと同じ）
elif [ $USER = 'guest' ]
then
echo 'Welcome.'

# 『すべてのif・elifの条件句』に当てはまらなかった場合、else句に処理が移る（then不要）
else
echo 'Who are you?'

fi

##Linuxのオペレーションログを自動で取得
#!/bin/bash

#
# this script require package "colorize-log".
# So do next command: "sudo apt install colorized-log" if you not installed this package.
# And place this file in "/etc/profile.d/".
#

function formatLogFile() {
	target=${logdir}/$1
	if [ ! -d ${formatdir} ];then
		mkdir ${formatdir}
	fi
	cat ${target} | ansi2txt | iconv | col -b >> ${formatdir}/formated_${filename}
}


if [ ! -d ~/log ];then
		mkdir ~/log
fi
if [ ! -d ~/log/formated ];then
		mkdir ~/log/formated
fi
filename="`date +%Y%m%d_%H-%M-%S`_operation.log"
logdir="${HOME}/log"
formatdir=${HOME}/log/formated
touch ${logdir}/${filename}
script ${logdir}/${filename} && formatLogFile ${filename} && exit


##画面右上クリック

[void] [System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms") 

Start-Sleep -s 3

$X = [System.Windows.Forms.Cursor]::Position.X
$Y = [System.Windows.Forms.Cursor]::Position.Y

Write-Output "X: $X | Y: $Y"
Read-Host

# マウスカーソル移動
[System.Windows.Forms.Cursor]::Position = New-Object System.Drawing.Point(x, y)

# クリックイベント生成
$SendMouseClick::mouse_event(0x0002, 0, 0, 0, 0);
$SendMouseClick::mouse_event(0x0004, 0, 0, 0, 0);






