# タイマー.ps1

param(
    [Parameter(Mandatory=$true)]
    [int]$Minutes
)

function Show-ProgressBar {
    param(
        [int]$Percent
    )
    $progressBar = ""
    $barLength = 20
    $filledLength = [math]::Floor($barLength * $Percent / 100)
    
    for ($i = 0; $i -lt $barLength; $i++) {
        if ($i -lt $filledLength) {
            $progressBar += "█"
        } else {
            $progressBar += "░"
        }
    }
    return $progressBar
}

try {
    $totalSeconds = $Minutes * 60
    $endTime = (Get-Date).AddSeconds($totalSeconds)
    
    while ((Get-Date) -lt $endTime) {
        Clear-Host
        
        $timeLeft = $endTime - (Get-Date)
        $minutesLeft = [math]::Floor($timeLeft.TotalMinutes)
        $secondsLeft = [math]::Floor($timeLeft.TotalSeconds % 60)
        
        $percentComplete = 100 - ([math]::Floor($timeLeft.TotalSeconds / $totalSeconds * 100))
        $progressBar = Show-ProgressBar -Percent $percentComplete
        
        Write-Host "`n   PowerShell タイマー" -ForegroundColor Cyan
        Write-Host "=========================" -ForegroundColor Cyan
        Write-Host "`n残り時間: $minutesLeft 分 $secondsLeft 秒`n"
        Write-Host "[$progressBar]"
        Write-Host "`nCtrl+C で終了"
        
        Start-Sleep -Seconds 1
    }
    
    Clear-Host
    Write-Host "`n時間になりました！" -ForegroundColor Yellow
    
    # アラーム音を3回鳴らす
    for ($i = 0; $i -lt 3; $i++) {
        [console]::beep(1000, 500)
        Start-Sleep -Milliseconds 500
    }

} catch {
    Write-Host "`nタイマーが中断されました" -ForegroundColor Red
}
